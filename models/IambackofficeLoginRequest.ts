/**
 * IamBackoffice Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IambackofficeMetaData } from '../models/IambackofficeMetaData';
import { HttpFile } from '../http/http';

export class IambackofficeLoginRequest {
    'tenantId'?: string;
    'ipAddress'?: string;
    'loginId'?: string;
    'metaData'?: IambackofficeMetaData;
    'noTokens'?: boolean;
    'password'?: string;
    'twoFactorTrustId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "tenantId",
            "baseName": "tenantId",
            "type": "string",
            "format": ""
        },
        {
            "name": "ipAddress",
            "baseName": "ipAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "loginId",
            "baseName": "loginId",
            "type": "string",
            "format": ""
        },
        {
            "name": "metaData",
            "baseName": "metaData",
            "type": "IambackofficeMetaData",
            "format": ""
        },
        {
            "name": "noTokens",
            "baseName": "noTokens",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "twoFactorTrustId",
            "baseName": "twoFactorTrustId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IambackofficeLoginRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

